---
import { pgwWrap } from "../js/pgw.js";
---

<div class="top-three">
  <img class="top-three__header-image" src="/image/top4.svg" alt="熱門食物" />
  <h2 class="data-update-notice">*數據每分鐘更新一次</h2>
  <div id="top-three-container" class="top-three__container">
    <div class="top-three__loading">載入中...</div>
  </div>
</div>
<div class="banner__bottomimg">
  <img src="/image/banner_bottomimg.png" alt="Banner Bottom Image" />
</div>

<script>
  import { pgwWrap } from "../js/pgw.js";

  document.addEventListener("DOMContentLoaded", async () => {
    // 獲取容器元素
    const container = document.getElementById("top-three-container");
    const apiUrl = "https://lab-event.udn.com/bd_500bowls_vote2025_test/API/food.php";
    // const apiUrl = "../API/food.php";

    // 用於標記數據是否已經加載
    let isDataLoaded = false;
    // 用於儲存清除定時器的 ID
    let checkIntervalId = null;

    // 從全局變量獲取數據的函數
    function getDataFromGlobalFoods() {
      if (window.allFoods && Array.isArray(window.allFoods) && window.allFoods.length > 0) {
        console.log("從全局變量 window.allFoods 中獲取前三名食物數據");
        // 對食物按投票數排序
        const sortedFoods = [...window.allFoods].sort((a, b) => b.votes - a.votes);
        // 獲取前三名
        return sortedFoods.slice(0, 4);
      }
      return null;
    }

    // 創建自定義事件，用於接收 foodlist 載入完成的通知
    const FOODLIST_LOADED_EVENT = "foodlist-data-loaded";

    // 添加事件監聽器，等待 foodlist 數據載入完成
    window.addEventListener(FOODLIST_LOADED_EVENT, (event) => {
      // 如果數據已經加載過，則不再重複處理
      if (isDataLoaded) return;

      if (event.detail && Array.isArray(event.detail.foods)) {
        console.log("收到 foodlist 載入事件，處理前四名食物");
        const foods = event.detail.foods;
        // 對食物按投票數排序
        const sortedFoods = [...foods].sort((a, b) => b.votes - a.votes);
        // 獲取前四名
        const topFourFoods = sortedFoods.slice(0, 4);
        renderTopFour(topFourFoods);
        // 標記數據已加載
        isDataLoaded = true;
        // 清除檢查定時器
        if (checkIntervalId) {
          clearInterval(checkIntervalId);
          checkIntervalId = null;
        }
      }
    });

    // 添加監聽器，用於接收投票成功後的更新通知
    window.addEventListener("updateTopThree", () => {
      console.log("收到更新前三名排行事件");

      // 從全局變量中重新獲取並排序數據
      const updatedFoods = getDataFromGlobalFoods();
      if (updatedFoods && updatedFoods.length > 0) {
        console.log("投票後更新前三名排行數據:", updatedFoods);
        renderTopFour(updatedFoods);
      } else {
        // 如果無法從全局變量獲取，則直接從 API 獲取最新數據
        fetchTopFourFromAPI();
      }
    });

    // 從 API 獲取前四名數據
    async function fetchTopFourFromAPI() {
      try {
        console.log("從 API 獲取最新前四名數據");
        const response = await fetch(`${apiUrl}?sort=votes&order=desc&limit=4`, {
          cache: "no-store", // 禁用緩存，確保獲取最新數據
        });

        if (!response.ok) throw new Error(`API響應錯誤: ${response.status}`);

        const data = await response.json();

        if (data.success && data.data && data.data.foods) {
          const topFourFoods = data.data.foods.slice(0, 4);
          if (topFourFoods.length > 0) {
            console.log("API 返回的前四名數據:", topFourFoods);
            renderTopFour(topFourFoods);
          }
        }
      } catch (err) {
        console.error("獲取前四名數據失敗:", err);
      }
    }

    // 渲染前四名食物的函數
    function renderTopFour(topFourFoods) {
      if (!container) return;

      // 使用BEM命名的食物網格
      container.className = "top-three__grid";

      // 票數排序
      const reorderedFoods = [...topFourFoods];

      // 使用 DocumentFragment 提高性能
      const fragment = document.createDocumentFragment();

      // 生成HTML
      reorderedFoods.forEach((food, index) => {
        // 創建卡片元素
        const cardDiv = document.createElement("div");
        cardDiv.className = "top-three__card";

        // 設置動畫延遲
        cardDiv.style.animationDelay = `${index * 0.1}s`;

        // 創建橫向布局容器
        const cardLayout = document.createElement("div");
        cardLayout.className = "top-three__layout";

        // 創建圖片容器
        const imgDiv = document.createElement("div");
        imgDiv.className = "top-three__image";

        const img = document.createElement("img");
        img.src = food.image ? food.image : pgwWrap("/placeholder-food.jpg");
        img.alt = food.title;
        img.loading = "lazy";

        imgDiv.appendChild(img);
        cardLayout.appendChild(imgDiv);

        // 創建內容區
        const contentDiv = document.createElement("div");
        contentDiv.className = "top-three__content";

        const titleH3 = document.createElement("h3");
        titleH3.className = "top-three__title";
        titleH3.textContent = food.title || "未命名食物";

        const votesDiv = document.createElement("div");
        votesDiv.className = "top-three__votes";

        const votesSpan = document.createElement("span");
        votesSpan.className = "top-three__votes-count";

        const votesNumberSpan = document.createElement("span");
        votesNumberSpan.textContent = `${food.votes || 0}`;

        const votesTextSpan = document.createElement("span");
        votesTextSpan.className = "top-three__votes-text";
        votesTextSpan.textContent = "票";

        votesSpan.appendChild(votesNumberSpan);
        votesSpan.appendChild(votesTextSpan);
        votesDiv.appendChild(votesSpan);
        contentDiv.appendChild(titleH3);
        contentDiv.appendChild(votesDiv);

        // 將內容區添加到布局容器中
        cardLayout.appendChild(contentDiv);

        // 將布局容器添加到卡片中
        cardDiv.appendChild(cardLayout);

        fragment.appendChild(cardDiv);
      });

      // 清空容器並添加生成的DOM元素
      container.innerHTML = "";
      container.appendChild(fragment);

      // 觸發滑入動畫
      setTimeout(() => {
        const cards = container.querySelectorAll(".top-three__card");
        cards.forEach((card, index) => {
          setTimeout(() => {
            card.classList.add("slide-in");
          }, index * 400); // 每張卡片延遲 500ms
        });
      }, 50); // 稍微延遲以確保 DOM 渲染完成
    }

    try {
      // 嘗試首先從全局變量獲取數據
      const topFourFoods = getDataFromGlobalFoods();
      if (topFourFoods) {
        renderTopFour(topFourFoods);
        isDataLoaded = true;
        return; // 如果成功獲取全局數據，直接返回
      }

      // 監聽 window.allFoods 變化
      checkIntervalId = setInterval(() => {
        const foods = getDataFromGlobalFoods();
        if (foods) {
          console.log("檢測到 window.allFoods 數據，停止檢查");
          clearInterval(checkIntervalId);
          checkIntervalId = null;

          // 如果數據還沒有被載入過，則渲染數據
          if (!isDataLoaded) {
            renderTopFour(foods);
            isDataLoaded = true;
          }
        }
      }, 200);

      // 設置超時，如果 3 秒後仍未獲取到數據，則直接發送 API 請求
      setTimeout(() => {
        // 確保數據尚未載入且定時器還在運行
        if (!isDataLoaded && checkIntervalId) {
          clearInterval(checkIntervalId);
          checkIntervalId = null;
          console.log("等待全局數據超時，開始自行發送 API 請求");

          fetch(`${apiUrl}?sort=votes&order=desc&limit=4`, {
            cache: "no-store", // 禁用緩存，確保每次獲取最新數據
          })
            .then((response) => {
              if (!response.ok) throw new Error(`API響應錯誤: ${response.status}`);
              return response.json();
            })
            .then((data) => {
              // 檢查API返回是否成功且包含食物數據
              if (data.success && data.data && data.data.foods) {
                const topFourFoods = data.data.foods.slice(0, 4);

                // 只有當數據還沒有被載入過時才渲染
                if (topFourFoods.length > 0 && !isDataLoaded) {
                  renderTopFour(topFourFoods);
                  isDataLoaded = true;
                } else if (!isDataLoaded) {
                  container.innerHTML = '<div class="top-three__empty">目前尚無熱門食物</div>';
                }
              } else {
                throw new Error("獲取食物數據失敗");
              }
            })
            .catch((err) => {
              console.error("獲取熱門食物時出錯:", err);
              if (!isDataLoaded) {
                container.innerHTML = `<div class="top-three__error">無法載入熱門食物: ${err.message}</div>`;
              }
            });
        }
      }, 3000);
    } catch (err) {
      console.error("處理熱門食物時出錯:", err);
      container.innerHTML = `<div class="top-three__error">無法顯示熱門食物: ${err.message}</div>`;
    }
  });
</script>

<style lang="scss" is:global>
  /* 主要容器樣式 */
  .top-three {
    width: 100%;
    max-width: 470px;
    margin: 0 auto;
    padding: 50px 16px 60px 12px;

    /* 頂部標題圖片 */
    &__header-image {
      width: 100%;
      max-width: 300px;
      margin: 0 auto;
      display: block;
      @media (max-width: 480px) {
        max-width: 240px;
      }
    }
    &__layout {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
    }

    /* 網格布局 */
    &__grid {
      display: flex;
      flex-direction: column;
      gap: 40px;
      justify-content: center;
      min-height: clamp(340px, 75vw, 380px);
    }

    /* 卡片基本樣式 */
    &__card {
      background: #fffecc;
      box-shadow: 4px 4px 0px 3px rgba(0, 0, 0, 1);
      display: flex;
      width: 100%;
      height: 60px;
      position: relative;
      border-radius: 50px;
      margin: 0 auto;
      padding: 0 0 0 20px;
      max-width: 100%;
      cursor: pointer;
      transition: all 0.3s ease;
      opacity: 0;
      transform: translateX(50px);
      &.slide-in {
        opacity: 1;
        transform: translateX(0);
        transition: all 0.6s ease-out;
      }
      @media (max-width: 460px) {
        height: 50px;
        padding: 0;
        // 手機版較小的位移
        transform: translateX(30px);

        &.slide-in {
          transform: translateX(0);
        }
      }
      &::before {
        content: "";
        position: absolute;
        top: 0;
        bottom: 0;
        right: -1px;
        width: 28%;
        background-color: rgba(#f2ede5, 1);
        transform: skewX(-15deg);
        z-index: 1;
        overflow: hidden;
        border-radius: 0 45px 23px 0;
        @media (max-width: 410px) {
          width: 30%;
        }
        @media (max-width: 410px) {
          width: 31%;
        }
      }
      &:hover {
        .top-three__image img {
          transform: scale(1.1);
        }

        box-shadow: 4px 4px 0px 3px rgba(0, 0, 0, 0.8);
        transform: translateY(-2px);
      }
    }
    /* 卡片內圖片容器 */
    &__image {
      flex: 0 0 80px;
      border: 3px solid #ffffff;
      box-shadow: 3px 7px 0px 2px rgba(0, 0, 0, 0.16);
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
      @media (max-width: 460px) {
        flex: 0 0 70px;
      }
    }

    /* 卡片內圖片 */
    &__image img {
      width: 100%;
      max-width: 80px;
      aspect-ratio: 1/1;
      display: block;
      object-fit: cover;
      object-position: center;
      border-radius: 50%;
      transition: transform 0.3s ease;
      @media (max-width: 460px) {
        max-width: 70px;
      }
    }

    /* 卡片內容區 */
    &__content {
      padding: 1rem;
      display: flex;
      flex: 1;
      align-items: center;
      @media (max-width: 460px) {
        padding: 1rem 1rem 1rem 0.5rem;
      }
    }

    /* 食物標題 */
    &__title {
      font-size: 22px;
      color: #000000;
      font-weight: 600;
      flex: 1;
      line-height: normal;
      text-align: left;
      @media (max-width: 460px) {
        font-size: 18px;
      }
      @media (max-width: 360px) {
        font-size: 16px;
      }
    }

    /* 投票數量 */
    &__votes {
      font-weight: bold;
      text-align: right;
      min-width: 60px;
      z-index: 1;
      &-count {
        font-size: 22px;
        color: #000;
        display: block;
        @media (max-width: 460px) {
          font-size: 18px;
        }
      }

      &-text {
        font-size: 12px;
        vertical-align: middle;
        margin-left: 2px;
      }
    }

    /* 狀態顯示 */
    &__loading,
    &__empty,
    &__error {
      text-align: center;
      padding: 20px;
      grid-column: 1 / -1;
    }

    &__loading {
      color: #7f8c8d;
      font-style: italic;
    }

    &__error {
      color: #ef4444;
      padding: 1rem;
      background-color: #fee2e2;
      border-radius: 6px;
    }

    &__empty {
      padding: 1rem;
      color: #6b7280;
      font-style: italic;
    }
  }

  /* 獨立的更新提醒樣式 */
  .data-update-notice {
    font-size: 16px;
    margin-bottom: 24px;
    color: #000;
    text-align: center;
  }
</style>
